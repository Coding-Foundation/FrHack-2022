version: "3.9"
services:
  postgres_frhack:
    image: postgres:9.6-alpine
    ports:
      - ${PUBLIC_POSTGRES_PORT:-5432}:5432 # custom
    networks:
      - postgres
    environment: # default values
      POSTGRES_USER: user
      POSTGRES_DB: db
      POSTGRES_PASSWORD: password
    env_file:
      - ./env/postgres.env
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"] # log level verbose
    volumes:
      - postgres_frhack:/var/lib/postgresql/data

  lab_frhack:
    image: $$REGISTRY/lab-frhack
    build: prep
    volumes:
      - ./clustering.ipynb:/opt/lab/clustering.ipynb
      - ./prep:/opt/lab/prep
    networks:
      - web
      - postgres
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.lab_frhack.rule: Host(`lab.$$DOMAIN_NAME`)
        traefik.http.routers.lab_frhack.entrypoints: websecure
        traefik.http.routers.lab_frhack.tls.certresolver: tls
        traefik.http.services.lab_frhack.loadbalancer.server.port: 8888

  pgweb_frhack:
    image: sosedoff/pgweb
    restart: unless-stopped
    environment:
      DATABASE_URL: postgres://user:password@postgres_frhack:5432/db?sslmode=disable
    env_file:
      - ./env/pgweb.env
    networks:
      - web
      - postgres
    depends_on:
      - postgres_frhack
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.pgweb_frhack.rule: Host(`db.$$DOMAIN_NAME`)
        traefik.http.routers.pgweb_frhack.entrypoints: websecure
        traefik.http.routers.pgweb_frhack.tls.certresolver: tls
        traefik.http.services.pgweb_frhack.loadbalancer.server.port: 8081
        # ldapAuth Register Middleware ====================================================
        # traefik.http.routers.pgweb.middlewares: ldap_auth

  api_frhack:
    image: $$REGISTRY/api-frhack
    build: anfr-api
    networks:
      - web
      - postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: db
      POSTGRES_PASSWORD: password
      POSTGRES_PORT: 5432
      POSTGRES_HOST: postgres_frhack
    env_file:
      - ./env/api.env
    volumes:
      - ./prep:/opt/anfr/prep
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.api_frhack.rule: Host(`api.$$DOMAIN_NAME`)
        traefik.http.routers.api_frhack.entrypoints: websecure
        traefik.http.routers.api_frhack.tls.certresolver: tls
        traefik.http.services.api_frhack.loadbalancer.server.port: 80

  front_frhack:
    image: $$REGISTRY/front-frhack
    build: anfr-front
    environment:
      API_URL: https://api.frhack.marcpartensky.com
      NODE_ENV: production
      PORT: 80
    env_file:
      - ./env/front.env
    networks:
      - web
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.front_frhack.rule: Host(`$$DOMAIN_NAME}`)
        traefik.http.routers.front_frhack.entrypoints: websecure
        traefik.http.routers.front_frhack.tls.certresolver: tls
        traefik.http.services.front_frhack.loadbalancer.server.port: 80

  gitbook_frhack:
    image: marcpartensky/gitbook
    restart: unless-stopped
    volumes:
      - ./README.md:/opt/gitbook/book/README.md
    networks:
      - caddy
    deploy:
      labels:
        traefik.enable: "true"
        traefik.http.routers.gitbook_frhack.rule: Host(`book.$$DOMAIN_NAME`)
        traefik.http.routers.gitbook_frhack.entrypoints: websecure
        traefik.http.routers.gitbook_frhack.tls.certresolver: tls
        traefik.http.services.gitbook_frhack.loadbalancer.server.port: 4000

volumes:
  postgres_frhack:

networks:
  postgres:
  web:
    name: $$NETWORK_NAME
    external: true
